// Generated by data binding compiler. Do not edit!
package com.example.wordbook.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.example.wordbook.R;
import com.example.wordbook.test.TestViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentTestBinding extends ViewDataBinding {
  @NonNull
  public final Button buttonMeans1;

  @NonNull
  public final Button buttonMeans2;

  @NonNull
  public final Button buttonMeans3;

  @NonNull
  public final Button buttonMeans4;

  @NonNull
  public final ConstraintLayout candidateContainer;

  @NonNull
  public final ConstraintLayout questionContainer;

  @NonNull
  public final TextView resultState;

  @NonNull
  public final TextView textEnglish;

  @Bindable
  protected TestViewModel mViewModel;

  protected FragmentTestBinding(Object _bindingComponent, View _root, int _localFieldCount,
      Button buttonMeans1, Button buttonMeans2, Button buttonMeans3, Button buttonMeans4,
      ConstraintLayout candidateContainer, ConstraintLayout questionContainer, TextView resultState,
      TextView textEnglish) {
    super(_bindingComponent, _root, _localFieldCount);
    this.buttonMeans1 = buttonMeans1;
    this.buttonMeans2 = buttonMeans2;
    this.buttonMeans3 = buttonMeans3;
    this.buttonMeans4 = buttonMeans4;
    this.candidateContainer = candidateContainer;
    this.questionContainer = questionContainer;
    this.resultState = resultState;
    this.textEnglish = textEnglish;
  }

  public abstract void setViewModel(@Nullable TestViewModel viewModel);

  @Nullable
  public TestViewModel getViewModel() {
    return mViewModel;
  }

  @NonNull
  public static FragmentTestBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_test, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentTestBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentTestBinding>inflateInternal(inflater, R.layout.fragment_test, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentTestBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_test, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentTestBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentTestBinding>inflateInternal(inflater, R.layout.fragment_test, null, false, component);
  }

  public static FragmentTestBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentTestBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentTestBinding)bind(component, view, R.layout.fragment_test);
  }
}
